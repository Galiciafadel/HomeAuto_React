{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\react_home_auto-main\\\\src\\\\components\\\\RoomEquipmentComponent.js\";\n\n/* eslint-disable react/jsx-pascal-case */\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardText, Button, Modal, ModalHeader, ModalBody, Label, Row, Col, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n/*function RenderRoomEquipment({roomequipment}) {\n    return (\n      <Card>\n        <CardImg top src={baseUrl + roomequipment.image} alt={roomequipment.name} />\n        <CardBody>\n          <CardTitle>{room.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    )\n  }*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderEquipment({\n  equipment,\n  postEquipment,\n  roomId\n}) {\n  const equip = equipment.map(equipment => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: equipment.equipment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: equipment.goal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: equipment.turnedOn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: equipment.actual\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, equipment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  });\n\n  if (equipment == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Equipment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: equip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RenderEquipment;\n\nconst RoomEquipmentDetail = props => {\n  const room = props.room;\n  console.log(room);\n\n  if (props.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  } else if (props.errMess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.errMess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  } else if (props.room != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/apartments/${room.id}`,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            active: true,\n            children: props.room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          children: /*#__PURE__*/_jsxDEV(RenderEquipment, {\n            equipment: props.equipment,\n            postEquipment: props.postEquipment,\n            roomId: props.room.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c2 = RoomEquipmentDetail;\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length < len;\n\nconst minLength = len => val => val && val.length >= len;\n/*class CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModelOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModelOpen: !this.state.isModelOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postEquipment(this.props.dishId, values.rating, values.author, values.comment);\n        console.log('Current state is: ' + JSON.stringify(values));\n    }\n\n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-edit fa-lg\"></span> Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label for=\"rating\" md={12}>rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \n                                    placeholder=\"Author\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                        minLength: minLength(3),\n                                        maxLength: maxLength(15)\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Should have more than 3 Characters',\n                                        maxLength: 'Should have 15 or less Characters'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={12}>Your feedback</Label>\n                                <Col md={12}>\n                                <Control.text model=\".comment\" id=\"comment\" name=\"comment\" \n                                    resize=\"none\"\n                                    rows=\"12\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                        minLength: minLength(1)\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Should not be empty!'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>                            \n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n\n        )\n    }\n}*/\n\n\nexport default RoomEquipmentDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderEquipment\");\n$RefreshReg$(_c2, \"RoomEquipmentDetail\");","map":{"version":3,"sources":["C:/Users/asus/OneDrive/Desktop/react_home_auto-main/src/components/RoomEquipmentComponent.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","Button","Modal","ModalHeader","ModalBody","Label","Row","Col","CardTitle","Breadcrumb","BreadcrumbItem","Control","LocalForm","Errors","Link","Loading","baseUrl","RenderEquipment","equipment","postEquipment","roomId","equip","map","goal","turnedOn","actual","id","RoomEquipmentDetail","props","room","console","log","isLoading","errMess","name","required","val","length","maxLength","len","minLength"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-pascal-case */\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody,CardText, Button, Modal, ModalHeader, ModalBody,\n    Label, Row, Col, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n/*function RenderRoomEquipment({roomequipment}) {\n    return (\n      <Card>\n        <CardImg top src={baseUrl + roomequipment.image} alt={roomequipment.name} />\n        <CardBody>\n          <CardTitle>{room.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    )\n  }*/\n\n  function RenderEquipment({equipment, postEquipment, roomId}) {\n    const equip = equipment.map(equipment => {\n        return (\n            <li key={equipment.id}>\n                <p>{equipment.equipment}</p>\n                <p>{equipment.goal}</p>\n                <p>{equipment.turnedOn}</p>\n                <p>{equipment.actual}</p>\n                \n            </li>\n        )\n    });\n    if (equipment == null) {\n        return <div></div>\n    }\n    return (\n        <div>\n            <h3>Equipment</h3>\n            <ul className=\"list-unstyled\">\n                {equip}\n            </ul>\n            \n        </div>\n    );\n}\n\nconst RoomEquipmentDetail = (props) => {\n    const room = props.room\n\n    console.log(room);\n    \n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.room != null) {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n    \n                    <BreadcrumbItem><Link to={`/apartments/${room.id}`}>Back</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.room.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.room.name}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 m-1\">\n                <RenderEquipment equipment={props.equipment}\n                    postEquipment={props.postEquipment}\n                    roomId={props.room.id}\n                />\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length < len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\n/*class CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModelOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModelOpen: !this.state.isModelOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postEquipment(this.props.dishId, values.rating, values.author, values.comment);\n        console.log('Current state is: ' + JSON.stringify(values));\n    }\n\n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-edit fa-lg\"></span> Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label for=\"rating\" md={12}>rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \n                                    placeholder=\"Author\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                        minLength: minLength(3),\n                                        maxLength: maxLength(15)\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Should have more than 3 Characters',\n                                        maxLength: 'Should have 15 or less Characters'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={12}>Your feedback</Label>\n                                <Col md={12}>\n                                <Control.text model=\".comment\" id=\"comment\" name=\"comment\" \n                                    resize=\"none\"\n                                    rows=\"12\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                        minLength: minLength(1)\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Should not be empty!'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>                            \n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n\n        )\n    }\n}*/\n\nexport default RoomEquipmentDetail;"]},"metadata":{},"sourceType":"module"}