{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const postroom = (RoomTypeId, name, equipement) => dispatch => {\n  const newRoom = {\n    RoomTypeId: RoomTypeId,\n    name: name,\n    equipment: equipement\n  };\n  return fetch(baseUrl + 'rooms', {\n    method: \"POST\",\n    body: JSON.stringify(newRoom),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addroom(response))).catch(error => {\n    console.log('post Rooms', error.message);\n    alert('Your room could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchApartments = () => dispatch => {\n  dispatch(apartmentsLoading(true));\n  return fetch(baseUrl + 'Apartments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(apartments => dispatch(addApartments(apartments))).catch(error => dispatch(ApartmentsFailed(error.message)));\n};\nexport const apartmentsLoading = () => ({\n  type: ActionTypes.APARTMENTS_LOADING\n});\nexport const ApartmentsFailed = errmess => ({\n  type: ActionTypes.APARTMENTS_FAILED,\n  payload: errmess\n});\n_c = ApartmentsFailed;\nexport const addApartments = apartments => ({\n  type: ActionTypes.ADD_APARTMENTS,\n  payload: apartments\n});\nexport const fetchRooms = () => dispatch => {\n  return fetch(baseUrl + 'rooms').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(rooms => dispatch(addroom(rooms))).catch(error => dispatch(roomsFailed(error.message)));\n};\nexport const addroom = rooms => ({\n  type: ActionTypes.ADD_ROOMS,\n  payload: rooms\n});\nexport const roomsFailed = errmess => ({\n  type: ActionTypes.ROOMS_FAILED,\n  payload: errmess\n});\nexport const fetchUsers = () => dispatch => {\n  dispatch(usersLoading());\n  return fetch(baseUrl + 'Users').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(users => dispatch(addUsers(users))).catch(error => dispatch(usersFailed(error.message)));\n};\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\nexport const usersFailed = errmess => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\nexport const addUsers = users => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\nexport const fetchEquipment = () => dispatch => {\n  dispatch(equipmentLoading());\n  return fetch(baseUrl + 'Equipments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    console.log(errmess);\n    throw errmess;\n  }).then(response => response.json()).then(equipment => dispatch(addEquipment(equipment))).catch(error => dispatch(EquipmentFailed(error.message)));\n};\nexport const equipmentLoading = () => ({\n  type: ActionTypes.EQUIPMENT_LOADING\n});\nexport const EquipmentFailed = errmess => ({\n  type: ActionTypes.EQUIPMENT_FAILED,\n  payload: errmess\n});\n_c2 = EquipmentFailed;\nexport const addEquipment = equipment => ({\n  type: ActionTypes.ADD_EQUIPMENT,\n  payload: equipment\n});\nexport const fetchEquipmentType = () => dispatch => {\n  dispatch(EquipmentTypeLoading());\n  return fetch(baseUrl + 'EquipmentType').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(equipmentType => dispatch(addEquipmentType(equipmentType))).catch(error => dispatch(EquipmentTypeFailed(error.message)));\n};\nexport const EquipmentTypeLoading = () => ({\n  type: ActionTypes.EQUIPMENTTYPE_LOADING\n});\n_c3 = EquipmentTypeLoading;\nexport const EquipmentTypeFailed = errmess => ({\n  type: ActionTypes.EQUIPMENTTYPE_FAILED,\n  payload: errmess\n});\n_c4 = EquipmentTypeFailed;\nexport const addEquipmentType = equipmentType => ({\n  type: ActionTypes.ADD_EQUIPMENTTYPE,\n  payload: equipmentType\n});\nexport const fetchApartmentType = () => dispatch => {\n  dispatch(ApartmentTypeLoading());\n  return fetch(baseUrl + 'ApartmentType').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(apartmentType => dispatch(addApartmentType(apartmentType))).catch(error => dispatch(ApartmentTypeFailed(error.message)));\n};\nexport const ApartmentTypeLoading = () => ({\n  type: ActionTypes.APARTMENTTYPE_LOADING\n});\n_c5 = ApartmentTypeLoading;\nexport const ApartmentTypeFailed = errmess => ({\n  type: ActionTypes.APARTMENTTYPE_FAILED,\n  payload: errmess\n});\n_c6 = ApartmentTypeFailed;\nexport const addApartmentType = apartmentType => ({\n  type: ActionTypes.ADD_APARTMENTTYPE,\n  payload: apartmentType\n});\nexport const fetchRoomType = () => dispatch => {\n  dispatch(roomTypeLoading());\n  return fetch(baseUrl + 'RoomType').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(roomType => dispatch(addroomType(roomType))).catch(error => dispatch(roomTypeFailed(error.message)));\n};\nexport const roomTypeLoading = () => ({\n  type: ActionTypes.ROOMTYPE_LOADING\n});\nexport const roomTypeFailed = errmess => ({\n  type: ActionTypes.ROOMTYPE_FAILED,\n  payload: errmess\n});\nexport const addroomType = roomType => ({\n  type: ActionTypes.ADD_ROOMTYPE,\n  payload: roomType\n});\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ApartmentsFailed\");\n$RefreshReg$(_c2, \"EquipmentFailed\");\n$RefreshReg$(_c3, \"EquipmentTypeLoading\");\n$RefreshReg$(_c4, \"EquipmentTypeFailed\");\n$RefreshReg$(_c5, \"ApartmentTypeLoading\");\n$RefreshReg$(_c6, \"ApartmentTypeFailed\");","map":{"version":3,"sources":["C:/Users/asus/OneDrive/Desktop/react_home_auto-main/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","postroom","RoomTypeId","name","equipement","dispatch","newRoom","equipment","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addroom","catch","console","log","message","alert","fetchApartments","apartmentsLoading","errmess","apartments","addApartments","ApartmentsFailed","type","APARTMENTS_LOADING","APARTMENTS_FAILED","payload","ADD_APARTMENTS","fetchRooms","rooms","roomsFailed","ADD_ROOMS","ROOMS_FAILED","fetchUsers","usersLoading","users","addUsers","usersFailed","USERS_LOADING","USERS_FAILED","ADD_USERS","fetchEquipment","equipmentLoading","addEquipment","EquipmentFailed","EQUIPMENT_LOADING","EQUIPMENT_FAILED","ADD_EQUIPMENT","fetchEquipmentType","EquipmentTypeLoading","equipmentType","addEquipmentType","EquipmentTypeFailed","EQUIPMENTTYPE_LOADING","EQUIPMENTTYPE_FAILED","ADD_EQUIPMENTTYPE","fetchApartmentType","ApartmentTypeLoading","apartmentType","addApartmentType","ApartmentTypeFailed","APARTMENTTYPE_LOADING","APARTMENTTYPE_FAILED","ADD_APARTMENTTYPE","fetchRoomType","roomTypeLoading","roomType","addroomType","roomTypeFailed","ROOMTYPE_LOADING","ROOMTYPE_FAILED","ADD_ROOMTYPE"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\nexport const postroom = (RoomTypeId, name, equipement) => (dispatch) => {\n\n    const newRoom = {\n        RoomTypeId: RoomTypeId,\n        name: name,\n        equipment: equipement\n    };\n    \n    return fetch(baseUrl + 'rooms', {\n        method: \"POST\",\n        body: JSON.stringify(newRoom),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addroom(response)))\n    .catch(error =>  { console.log('post Rooms', error.message); alert('Your room could not be posted\\nError: '+error.message); });\n};\n\n\nexport const fetchApartments = () => (dispatch) => {\n\n    dispatch(apartmentsLoading(true));\n\n    return fetch(baseUrl + 'Apartments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(apartments => dispatch(addApartments(apartments)))\n    .catch(error => dispatch(ApartmentsFailed(error.message)));\n}\n\nexport const apartmentsLoading = () => ({\n    type: ActionTypes.APARTMENTS_LOADING\n});\n\nexport const ApartmentsFailed = (errmess) => ({\n    type: ActionTypes.APARTMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addApartments = (apartments) => ({\n    type: ActionTypes.ADD_APARTMENTS,\n    payload: apartments\n});\n\nexport const fetchRooms = () => (dispatch) => {    \n    return fetch(baseUrl + 'rooms')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(rooms => dispatch(addroom(rooms)))\n    .catch(error => dispatch(roomsFailed(error.message)));\n}\n\nexport const addroom = (rooms) => ({\n  type: ActionTypes.ADD_ROOMS,\n  payload: rooms\n});\n\n\nexport const roomsFailed = (errmess) => ({\n    type: ActionTypes.ROOMS_FAILED,\n    payload: errmess\n});\n\n\n\nexport const fetchUsers = () => (dispatch) => {\n    \n    dispatch(usersLoading());\n\n    return fetch(baseUrl + 'Users')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(users => dispatch(addUsers(users)))\n    .catch(error => dispatch(usersFailed(error.message)));\n}\n\n\nexport const usersLoading = () => ({\n    type: ActionTypes.USERS_LOADING\n});\n\nexport const usersFailed = (errmess) => ({\n    type: ActionTypes.USERS_FAILED,\n    payload: errmess\n});\n\nexport const addUsers = (users) => ({\n    type: ActionTypes.ADD_USERS,\n    payload: users\n});\n\n\n\nexport const fetchEquipment = () => (dispatch) => {\n    \n  dispatch(equipmentLoading());\n\n  return fetch(baseUrl + 'Equipments')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          console.log(errmess);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(equipment => dispatch(addEquipment(equipment)))\n  .catch(error => dispatch(EquipmentFailed(error.message)));\n}\n\n\nexport const equipmentLoading = () => ({\n  type: ActionTypes.EQUIPMENT_LOADING\n});\n\nexport const EquipmentFailed = (errmess) => ({\n  type: ActionTypes.EQUIPMENT_FAILED,\n  payload: errmess\n});\n\nexport const addEquipment = (equipment) => ({\n  type: ActionTypes.ADD_EQUIPMENT,\n  payload: equipment\n});\n\n\n\nexport const fetchEquipmentType = () => (dispatch) => {\n    \n  dispatch(EquipmentTypeLoading());\n\n  return fetch(baseUrl + 'EquipmentType')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(equipmentType => dispatch(addEquipmentType(equipmentType)))\n  .catch(error => dispatch(EquipmentTypeFailed(error.message)));\n}\n\n\nexport const EquipmentTypeLoading = () => ({\n  type: ActionTypes.EQUIPMENTTYPE_LOADING\n});\n\nexport const EquipmentTypeFailed = (errmess) => ({\n  type: ActionTypes.EQUIPMENTTYPE_FAILED,\n  payload: errmess\n});\n\nexport const addEquipmentType = (equipmentType) => ({\n  type: ActionTypes.ADD_EQUIPMENTTYPE,\n  payload: equipmentType\n});\n\n\nexport const fetchApartmentType = () => (dispatch) => {\n    \n  dispatch(ApartmentTypeLoading());\n\n  return fetch(baseUrl + 'ApartmentType')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(apartmentType => dispatch(addApartmentType(apartmentType)))\n  .catch(error => dispatch(ApartmentTypeFailed(error.message)));\n}\n\n\nexport const ApartmentTypeLoading = () => ({\n  type: ActionTypes.APARTMENTTYPE_LOADING\n});\n\nexport const ApartmentTypeFailed = (errmess) => ({\n  type: ActionTypes.APARTMENTTYPE_FAILED,\n  payload: errmess\n});\n\nexport const addApartmentType = (apartmentType) => ({\n  type: ActionTypes.ADD_APARTMENTTYPE,\n  payload: apartmentType\n});\n\n\nexport const fetchRoomType = () => (dispatch) => {\n    \n  dispatch(roomTypeLoading());\n\n  return fetch(baseUrl + 'RoomType')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(roomType => dispatch(addroomType(roomType)))\n  .catch(error => dispatch(roomTypeFailed(error.message)));\n}\n\n\nexport const roomTypeLoading = () => ({\n  type: ActionTypes.ROOMTYPE_LOADING\n});\n\nexport const roomTypeFailed = (errmess) => ({\n  type: ActionTypes.ROOMTYPE_FAILED,\n  payload: errmess\n});\n\nexport const addroomType = (roomType) => ({\n  type: ActionTypes.ADD_ROOMTYPE,\n  payload: roomType\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}